#!/bin/bash
set -e

DOTFILES_DIR=${DOTFILES_DIR:-~/dotfiles}
echo "üîß Integrating AppSignal MCP Server..."

# Check if Docker is available
if ! command -v docker &> /dev/null; then
    echo "‚ùå Error: Docker is required but not installed"
    echo "Please install Docker first: https://docs.docker.com/get-docker/"
    exit 1
fi

# Check if APPSIGNAL_API_KEY is set
if [ -z "${APPSIGNAL_API_KEY:-}" ]; then
    echo "‚ö†Ô∏è  Warning: APPSIGNAL_API_KEY environment variable is not set"
    echo ""
    echo "To get your AppSignal MCP token:"
    echo "1. Visit: https://appsignal.com/users/mcp_tokens (requires login)"
    echo "2. Set your token as an environment variable:"
    echo "   export APPSIGNAL_API_KEY='your-token-here'"
    echo ""
    echo "Would you like to continue integration and set the key later? (y/N)"
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Add to Claude Code (minimal envs; Goose will handle USER_AGENT/APPSIGNAL_DEBUG)
echo "Adding AppSignal MCP to Claude Code..."
if [ -n "${APPSIGNAL_API_KEY:-}" ]; then
    claude mcp add appsignal -e APPSIGNAL_API_KEY="$APPSIGNAL_API_KEY" -- docker run -i --rm -e APPSIGNAL_API_KEY appsignal/mcp
else
    claude mcp add appsignal -- docker run -i --rm -e APPSIGNAL_API_KEY appsignal/mcp
fi


echo "‚úÖ AppSignal MCP integrated with Claude Code!"
echo ""
echo "üöÄ Next steps:"
if [ -z "${APPSIGNAL_API_KEY:-}" ]; then
    echo "1. Set your APPSIGNAL_API_KEY environment variable"
    echo "2. Restart Claude Code"
else
    echo "1. Restart Claude Code to use the AppSignal MCP"
fi
echo ""
echo "üìñ Documentation: $( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )/doc/usage.md"

# Codex: upsert into ~/.codex/config.toml
# Goose: upsert into ~/.config/goose/config.yaml with defaults for USER_AGENT and APPSIGNAL_DEBUG

#
# Goose integration
# - Forward APPSIGNAL_API_KEY from the environment at runtime
# - Also forward USER_AGENT and APPSIGNAL_DEBUG into the container
# - Provide default values in config so GUI sessions (which may not inherit env) work reliably
"$DOTFILES_DIR/goose/integrate" upsert-stdio appsignal docker run -i --rm \
  -e APPSIGNAL_API_KEY -e USER_AGENT -e APPSIGNAL_DEBUG \
  appsignal/mcp \
  --env-key APPSIGNAL_API_KEY \
  --env USER_AGENT="Goose/1.7 Linux" \
  --env APPSIGNAL_DEBUG=true

# Codex integration (forward env only; do not store values)
"$DOTFILES_DIR/bin/codex-mcp" upsert appsignal <<EOF2
[mcp.servers.appsignal]
command = "docker"
args = [
  "run", "-i", "--rm",
  "-e", "APPSIGNAL_API_KEY",
  "-e", "USER_AGENT",
  "-e", "APPSIGNAL_DEBUG",
  "appsignal/mcp"
]
EOF2
