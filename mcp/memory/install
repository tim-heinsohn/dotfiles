#!/usr/bin/env bash
set -euo pipefail
# ------------------------------------------------------------
# Build the Goose Memory MCP server so it can be used by other
# Model Context Protocol clients (e.g. Claude, Codex).
# ------------------------------------------------------------

# Location of your Goose source clone. Adjust if different.
GOOSE_SRC="/srv/lib/goose"

if [[ ! -d "$GOOSE_SRC" ]]; then
  echo "ERROR: Goose source tree not found at $GOOSE_SRC" >&2
  exit 1
fi

# Determine the version of goose-desktop currently installed via pacman.
GOOSE_PKG_VER=$(pacman -Qi goose-desktop 2>/dev/null | awk '/^Version/ {print $3}' || true)
if [[ -n "$GOOSE_PKG_VER" ]]; then
  echo "==> Checking out Goose source tag that matches goose-desktop $GOOSE_PKG_VER"
  pushd "$GOOSE_SRC" >/dev/null
  git fetch --tags
  if git rev-parse -q --verify "refs/tags/v$GOOSE_PKG_VER" >/dev/null; then
    git checkout "v$GOOSE_PKG_VER"
  elif git rev-parse -q --verify "refs/tags/$GOOSE_PKG_VER" >/dev/null; then
    git checkout "$GOOSE_PKG_VER"
  else
    echo "Tag matching version not found; continuing on current branch" >&2
  fi
  popd >/dev/null
fi

# Build the Memory MCP server binary.
echo "==> Building goose-mcp-memory (release mode)"
pushd "$GOOSE_SRC/crates/goose-mcp" >/dev/null
cargo build --release --bin goose-mcp-memory
popd >/dev/null

BIN_SRC="$GOOSE_SRC/crates/goose-mcp/target/release/goose-mcp-memory"
BIN_DST="$HOME/.local/bin/goose-mcp-memory"

mkdir -p "$(dirname "$BIN_DST")"
install -m 755 "$BIN_SRC" "$BIN_DST"

echo "âœ… Installed goose-mcp-memory to $BIN_DST"

echo "You can now run:  goose-mcp-memory  (it will expose the memory tools on STDIO)"
