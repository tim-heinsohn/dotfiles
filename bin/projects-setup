#!/bin/bash

# symlink project dotfiles
find ~ -maxdepth 1 -type d -iname '*.dotfiles' | while read dotfiles
do
  echo "Dotfiles: ${dotfiles}"
  symlink_script="${dotfiles}/bin/symlink-dotfiles"
  if [ -f "${symlink_script}" ]; then
    echo "Symlink script: $symlink_script"
    "${symlink_script}"
  fi
done

# allow direnvs, see `man direnv.toml`
ALLOWED_DIRS=$(find ~ -maxdepth 1 -type d -iname '*.dev' | sed 's/^\|$/"/g' | paste -s -d, -)
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
TOML_FILE=$XDG_CONFIG_HOME/direnv/direnv.toml
mkdir -p ${XDG_CONFIG_HOME}/direnv/

echo Whitelist direnv : \'${TOML_FILE}\' -\> ${ALLOWED_DIRS}
cat << EOF > $TOML_FILE
# this file was generated via ~/dotfiles/bin/setup-projects
# do not overwrite it directly
[whitelist]
prefix = [ ${ALLOWED_DIRS} ]
EOF

# ensure ~/.projects exists with a template
PROJECTS_FILE="$HOME/.projects"
if [ ! -f "$PROJECTS_FILE" ]; then
  cat > "$PROJECTS_FILE" << 'EOS'
# ~/.projects â€” define primary/secondary project metadata and API keys
# This file is sourced by shell and status scripts. Keep it POSIX sh-compatible.

# Primary project
export PRIMARY_PROJECT_NAME="Your Primary Project"
export PRIMARY_PROJECT_CODE="PRIM"
export PRIMARY_PROJECT_ANTHROPIC_API_KEY=""
export PRIMARY_PROJECT_OPENAI_API_KEY=""
export PRIMARY_PROJECT_MOONSHOT_AI_API_KEY=""
# Goose defaults for primary project (see goose/config.md)
# Example values: GOOSE_PROVIDER=anthropic|openai, GOOSE_MODEL=claude-3-7-sonnet|gpt-4o-mini
export PRIMARY_PROJECT_GOOSE_PROVIDER=""
export PRIMARY_PROJECT_GOOSE_MODEL=""
# Prompt color for primary project (Powerlevel10k color)
# Examples: named colors: red, yellow, cyan; 256-color codes: 172 (orange), 208 (orange), 33 (blue)
export PRIMARY_PROJECT_PROMPT_COLOR="172"

# Codex CLI state dir for primary project (keeps config/history/trusted projects private)
# Example: /home/you/.codex-private-prim or simply ~/.codex-private
export PRIMARY_PROJECT_CODEX_HOME=""

# Secondary project
export SECONDARY_PROJECT_NAME="Your Secondary Project"
export SECONDARY_PROJECT_CODE="SEC"
export SECONDARY_PROJECT_ANTHROPIC_API_KEY=""
export SECONDARY_PROJECT_OPENAI_API_KEY=""
export SECONDARY_PROJECT_MOONSHOT_AI_API_KEY=""
# Goose defaults for secondary project (see goose/config.md)
# Example values: GOOSE_PROVIDER=anthropic|openai, GOOSE_MODEL=claude-3-7-sonnet|gpt-4o-mini
export SECONDARY_PROJECT_GOOSE_PROVIDER=""
export SECONDARY_PROJECT_GOOSE_MODEL=""
# Prompt color for secondary project (Powerlevel10k color)
# Examples: named colors: green, magenta; 256-color codes: 110 (teal), 99 (purple), 160 (red)
export SECONDARY_PROJECT_PROMPT_COLOR="110"

# Codex CLI state dir for secondary project (keeps config/history/trusted projects private)
# Example: /home/you/.codex-private-sec or simply ~/.codex-private
export SECONDARY_PROJECT_CODEX_HOME=""

# Tip:
# - project_toggle flips between primary and secondary.
# - kimi_toggle switches provider: Anthropics vs Moonshot (Kimi).
EOS
  echo "Initialized $PROJECTS_FILE with template variables."
fi

# Merge newly added envs into existing ~/.projects without overwriting
# Append if missing, keep user values intact
ensure_var() {
  # $1: VAR name, $2: default value
  local var="$1"
  local def="$2"
  if ! grep -Eq "^[[:space:]]*export[[:space:]]+${var}=" "$PROJECTS_FILE"; then
    printf '\n# Added by bin/projects-setup: ensure %s exists\nexport %s=%q\n' "$var" "$var" "$def" >> "$PROJECTS_FILE"
    echo "Appended missing var: $var"
  fi
}

ensure_var PRIMARY_PROJECT_OPENAI_API_KEY ""
ensure_var SECONDARY_PROJECT_OPENAI_API_KEY ""
ensure_var PRIMARY_PROJECT_ANTHROPIC_API_KEY ""
ensure_var SECONDARY_PROJECT_ANTHROPIC_API_KEY ""
ensure_var PRIMARY_PROJECT_MOONSHOT_AI_API_KEY ""
ensure_var SECONDARY_PROJECT_MOONSHOT_AI_API_KEY ""

# New Goose defaults (see goose/config.md):
ensure_var PRIMARY_PROJECT_GOOSE_PROVIDER ""
ensure_var PRIMARY_PROJECT_GOOSE_MODEL ""
ensure_var SECONDARY_PROJECT_GOOSE_PROVIDER ""
ensure_var SECONDARY_PROJECT_GOOSE_MODEL ""

# Ensure Codex per-project state directories are present in ~/.projects
ensure_var PRIMARY_PROJECT_CODEX_HOME ""
ensure_var SECONDARY_PROJECT_CODEX_HOME ""

# vim: ft=bash iskeyword+=.
