# FUNCTIONS
function aichat-session() {
  wezterm cli set-tab-title "/$1"
  aichat -s "$1"
}

function gps() {
  key=$(gpfzf)
  gopass show $key && gopass -c $key
}

function gpc() {
  gopass -c $(gpfzf)
}

function gpu() {
  gopass $(gpfzf) | grep user | sed -e 's/user://g' | tr -d '[:space:]' | xclip -selection c
}

function gpe() {
  gopass edit $(gpfzf)
}

# gopass w/ fzf
function gpfzf() {
  export pw=$(gopass ls -f | fzf --no-multi)
  echo "$pw"
}

# WezTerm tab management
# Current tab title only
function wti() {
  wezterm cli set-tab-title "$1"
}

# Triple-tab creation with naming pattern for multiple terms
function wta() {
  for term in "$@"; do
    local dir=$(pwd)  # Capture current directory
    # Rename current tab
    wezterm cli set-tab-title "#${term}"

    # Create tab 2 (~ suffix) with proper directory and title
    wezterm cli spawn --cwd "$dir" -- zsh -lic "echo -ne '\e]0;${term}>\a'; zsh"

    # Create tab 3 (> suffix) with proper directory and title
    wezterm cli spawn --cwd "$dir" -- zsh -lic "echo -ne '\e]0;${term}~\a'; zsh"

    # Create empty tab with default directory
    wezterm cli spawn -- zsh -l
  done
}

# tldr w/ fuzzy search
tldr-fzf() {
  selected=$(tldr --list | fzf \
    --query "$1" \
    --preview 'tldr {1} | bat --color=always --language=markdown --style=plain' \
    --preview-window=right:70% \
    --layout=reverse \
    --border \
    --height=80%)

  if [ -n "$selected" ]; then
      tldr "$selected" | bat --color=always --language=markdown --style=plain
  fi
}

# Add GitLab merge request fetch refspec
function glab-mr-fetch() {
  if ! git rev-parse --is-inside-work-tree &>/dev/null; then
    echo "Not a git repository"
    return 1
  fi

  local origin_url=$(git config --get remote.origin.url)
  if [[ -z "$origin_url" ]]; then
    echo "No remote 'origin' configured"
    return 1
  fi

  if [[ "$origin_url" != *"gitlab.com"* ]]; then
    echo "Remote origin is not a GitLab repository"
    return 0
  fi

  if git config --get-all remote.origin.fetch | grep -q 'refs/merge-requests/\*/head:refs/remotes/origin/mr/\*'; then
    echo "Merge request fetch refspec already exists"
    return 0
  fi

  git config --add remote.origin.fetch '+refs/merge-requests/*/head:refs/remotes/origin/mr/*'
  echo "Added merge request fetch refspec to origin remote"
}

# Rails migration timestamp
function rails_migration_date() {
  print -n $(date "+%Y%m%d%H%M%S")
}

# vim: set ft=zsh:
