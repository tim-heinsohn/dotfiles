# ENVIRONMENT
export AIDER_AUTO_ACCEPT_ARCHITECT=false
export AIDER_AUTO_TEST=false
export AIDER_CHAT_LANGUAGE=en
export AIDER_COMMIT_LANGUAGE=en
export AIDER_DARK_MODE=true
export AIDER_DISABLE_PLAYWRIGHT=true
export AIDER_GITIGNORE=false
export AIDER_GIT_COMMIT_VERIFY=true
export AIDER_LINT=false
export ## Specify lint commands to run for different languages, eg: "python: flake8 --select=..." (can be used multiple times)
# export AIDER_LINT_CMD=
export AIDER_SHOW_RELEASE_NOTES=false
export AIDER_SUGGEST_SHELL_COMMANDS=true
export AIDER_TEST_CMD=
export AIDER_VIM=true
export BAT_THEME="Monokai Extended" # bat --list-themes
export EDITOR="nvim"
export DOTFILES_DIR="$HOME/dotfiles"
export DIRENV_WARN_TIMEOUT=10s
export FZF_DEFAULT_COMMAND='ag --hidden -a --ignore .git -l -g ""' # let fzf find hidden files
export FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"
       # via <https://github.com/sharkdp/bat/issues/357>
export GTK_THEME=Adwaita:dark
export LESS="-R --ignore-case -P ?f%f:stdin.  line %ltâ€“%lb/%L  ?e(END):%PB\%."
export PATH="$PATH:$HOME/bin:$HOME/.local/bin:$HOME/.rvm/bin"

if [ -d "$HOME/f.dev/bin" ]; then
  export PATH="$PATH:$HOME/f.dev/bin"
fi
export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/ssh-agent.socket
export XCLIP_SELECTION="clipboard"


export GPG_TTY=$(tty)

# Only load gopass secrets in GUI environments
if [ -n "$DISPLAY" ] && [ -f "/usr/bin/gopass" ]; then
  # LLMs
  ANTHROPIC_API_KEY=$(gopass show -o t/ai/claude/api-key)
  export ANTHROPIC_API_KEY
  export PERSONAL_ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

  DEEPSEEK_API_KEY=$(gopass show -o t/ai/deepseek/api-key)
  export DEEPSEEK_API_KEY
  export PERSONAL_DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}

  GEMINI_API_KEY=$(gopass show -o t/ai/gemini/api-key)
  export GEMINI_API_KEY
  export PERSONAL_GEMINI_API_KEY=${GEMINI_API_KEY}

  MISTRAL_API_KEY=$(gopass show -o t/ai/mistral/api-key)
  export MISTRAL_API_KEY
  export PERSONAL_MISTRAL_API_KEY=${MISTRAL_API_KEY}

  MOONSHOT_AI_API_KEY=$(gopass show -o t/ai/moonshot.ai)
  export MOONSHOT_AI_API_KEY
  export PERSONAL_MOONSHOT_AI_API_KEY=${MOONSHOT_AI_API_KEY}

  OPENAI_API_KEY=$(gopass show -o t/ai/openai/api-key)
  export OPENAI_API_KEY
  export PERSONAL_OPENAI_API_KEY=${OPENAI_API_KEY}

  OPENROUTER_API_KEY=$(gopass show -o t/ai/openrouter.ai)
  export OPENROUTER_API_KEY
  export PERSONAL_OPENROUTER_API_KEY=${OPENROUTER_API_KEY}

  # Apply project-specific overrides via shared helper
  if [ -f "$HOME/dotfiles/zsh/lib/projects-env.zsh" ]; then
    source "$HOME/dotfiles/zsh/lib/projects-env.zsh"
    projects_apply_llm_env_from_selection
  fi

  # MCPs
  if command -v semgrep-mcp &> /dev/null; then
    SEMGREP_APP_TOKEN=$(gopass show -o t/dev/semgrep cli_token)
    export SEMGREP_APP_TOKEN
  fi
fi

if [ -f "/usr/bin/wezterm" ]; then
  export TERMINAL=/usr/bin/wezterm
fi

export REDIS_URL=redis://localhost:6379

# f.dev
export F_BANK_TRANSACTIONS_PATH="$HOME/f.doc.2023/Banken/"
export F_BANK_DOCUMENTS_PATH="$HOME/f.doc.2023/Steuern/Einkommensteuer/"

# Goose CLI/Desktop defaults when available
if command -v goose-gui >/dev/null 2>&1 \
  || command -v goose-desktop >/dev/null 2>&1 \
  || command -v goose >/dev/null 2>&1 \
  || command -v goose-cli >/dev/null 2>&1; then
  # Defaults for Goose CLI/Desktop. Use new top-level envs.
  export GOOSE_PROVIDER="openai"
  export GOOSE_MODEL="gpt-5"
  # API keys are provider-specific (e.g., OPENAI_API_KEY, ANTHROPIC_API_KEY)
fi

# vim: set ft=zsh:
